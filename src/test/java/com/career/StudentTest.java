/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.career;

import static org.junit.Assert.assertThrows;
import static org.junit.Assert.assertTrue;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class StudentTest {
	
	@Before
    public void setUp() {
    System.out.println("#############################\n");
        System.out.println("This is the setUp() method that runs before each testcase");
    }
    
	@Test public void processEmptyFileTest() throws IOException {
		BufferedWriter writer = new BufferedWriter(new FileWriter("fileToRead.txt", false));
		writer.write("student_code,student_name,enrollment_year"+"\n");
		BufferedReader br = Files.newBufferedReader(Paths.get("fileToRead.txt"));
        List<Exam> exams = Student.readExamLines(br);
        assertTrue(exams.isEmpty());
    }
	
	@Test public void processNotExistingFileTest() {
        String fileName = "XXXXXXXX";
        IOException thrown = assertThrows(IOException.class, () -> Student.readExams(fileName));
        assertTrue(thrown.getMessage().contains("File not found"));
    }
	
	@Test public void exceptionTestingNoContentToWriteOnOutputFile() {
        String fileName = "StudentsEnrolledMoreThan3Years.txt";
        List<String> elenco = new ArrayList<String>();
        String header = "student_code,student_name,enrollment_year";
        Exception thrown = assertThrows(Exception.class, () -> Student.writeFile(fileName, elenco, header,"No Student has passed almost 3 exams"));
        assertTrue(thrown.getMessage().contains("No Student has passed almost 3 exams"));
    }
	
	@After
    public void tearDown() {
        System.out.println("This is the tearDown() method that runs after each testcase");
        System.out.println("#############################\n");
    }
}
